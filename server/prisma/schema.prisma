generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id            Int       @id @default(autoincrement())
  username           String    @unique
  email              String    @unique
  password_hash      String
  credibility_score  Float     @default(0)
  status             String    @default("active")
  email_verified     Boolean   @default(false)
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  last_login         DateTime?
  Comments           Comment[]
  News               News[]
  Votes              Vote[]
  Credibility        UserCredibility?

  @@map("users")
  Publisher Publisher[]
}

model Publisher {
  publisher_id   Int    @id @default(autoincrement())
  user_id        Int
  government_id  String?
  journalism_id  String?
  User           User   @relation(fields: [user_id], references: [user_id])

  @@map("publishers")
}

model News {
  news_id          Int       @id @default(autoincrement())
  title            String
  content          String
  image_url        String
  fake_probability Float?
  real_probability Float?
  created_at       DateTime  @default(now())
  user_id          Int
  User             User      @relation(fields: [user_id], references: [user_id])
  Comments         Comment[]
  Votes            Vote[]

  @@map("news")
}

model Comment {
  comment_id  Int       @id @default(autoincrement())
  news_id     Int
  user_id     Int
  content     String
  created_at  DateTime  @default(now())
  News        News      @relation(fields: [news_id], references: [news_id])
  User        User      @relation(fields: [user_id], references: [user_id])

  @@map("comments")
}

model Vote {
  vote_id     Int       @id @default(autoincrement())
  news_id     Int
  user_id     Int
  vote_type   String    // Could be 'upvote' or 'downvote'
  created_at  DateTime  @default(now())
  News        News      @relation(fields: [news_id], references: [news_id])
  User        User      @relation(fields: [user_id], references: [user_id])

  @@map("votes")
}

model UserCredibility {
  credibility_id   Int       @id @default(autoincrement())
  user_id          Int @unique
  change_amount    Float
  reason           String
  created_at       DateTime  @default(now())
  User             User      @relation(fields: [user_id], references: [user_id])

  @@map("user_credibility")
}